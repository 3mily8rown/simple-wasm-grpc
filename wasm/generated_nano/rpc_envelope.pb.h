/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_RPC_ENVELOPE_PB_H_INCLUDED
#define PB_RPC_ENVELOPE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(256) RpcEnvelope_payload_t;
typedef struct _RpcEnvelope {
    char method[64];
    uint32_t request_id;
    RpcEnvelope_payload_t payload;
} RpcEnvelope;

typedef PB_BYTES_ARRAY_T(256) RpcResponse_payload_t;
typedef struct _RpcResponse {
    uint32_t request_id;
    RpcResponse_payload_t payload;
    char status[64]; /* e.g., "OK", "ERROR" */
} RpcResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define RpcEnvelope_init_default                 {"", 0, {0, {0}}}
#define RpcResponse_init_default                 {0, {0, {0}}, ""}
#define RpcEnvelope_init_zero                    {"", 0, {0, {0}}}
#define RpcResponse_init_zero                    {0, {0, {0}}, ""}

/* Field tags (for use in manual encoding/decoding) */
#define RpcEnvelope_method_tag                   1
#define RpcEnvelope_request_id_tag               2
#define RpcEnvelope_payload_tag                  3
#define RpcResponse_request_id_tag               1
#define RpcResponse_payload_tag                  2
#define RpcResponse_status_tag                   3

/* Struct field encoding specification for nanopb */
#define RpcEnvelope_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   method,            1) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        2) \
X(a, STATIC,   SINGULAR, BYTES,    payload,           3)
#define RpcEnvelope_CALLBACK NULL
#define RpcEnvelope_DEFAULT NULL

#define RpcResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   SINGULAR, BYTES,    payload,           2) \
X(a, STATIC,   SINGULAR, STRING,   status,            3)
#define RpcResponse_CALLBACK NULL
#define RpcResponse_DEFAULT NULL

extern const pb_msgdesc_t RpcEnvelope_msg;
extern const pb_msgdesc_t RpcResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define RpcEnvelope_fields &RpcEnvelope_msg
#define RpcResponse_fields &RpcResponse_msg

/* Maximum encoded size of messages (where known) */
#define RPC_ENVELOPE_PB_H_MAX_SIZE               RpcEnvelope_size
#define RpcEnvelope_size                         330
#define RpcResponse_size                         330

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
