/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_RPC_ENVELOPE_PB_H_INCLUDED
#define PB_RPC_ENVELOPE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SendMessage {
    int32_t id;
    char name[32];
} SendMessage;

typedef struct _SendMessageResponse {
    int32_t id;
    char info[64];
} SendMessageResponse;

typedef struct _AddRandom {
    int32_t num;
} AddRandom;

typedef struct _AddRandomResponse {
    int32_t sum;
} AddRandomResponse;

typedef struct _ProcessFloats {
    pb_size_t num_count;
    float num[16];
} ProcessFloats;

typedef struct _ProcessFloatsResponse {
    float sum;
} ProcessFloatsResponse;

typedef struct _BatchSendMessage {
    pb_size_t messages_count;
    SendMessage messages[16];
} BatchSendMessage;

typedef struct _RpcEnvelope {
    uint32_t request_id;
    pb_size_t which_payload;
    union {
        SendMessage msg;
        AddRandom rand;
        ProcessFloats flt;
        BatchSendMessage batch_msg;
    } payload;
} RpcEnvelope;

typedef struct _BatchResponse {
    pb_size_t responses_count;
    SendMessageResponse responses[16];
} BatchResponse;

typedef struct _RpcResponse {
    uint32_t request_id;
    pb_size_t which_payload;
    union {
        SendMessageResponse msg;
        AddRandomResponse rand;
        ProcessFloatsResponse flt;
        BatchResponse batch_msg;
    } payload;
    bool status;
} RpcResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define RpcEnvelope_init_default                 {0, 0, {SendMessage_init_default}}
#define RpcResponse_init_default                 {0, 0, {SendMessageResponse_init_default}, 0}
#define SendMessage_init_default                 {0, ""}
#define SendMessageResponse_init_default         {0, ""}
#define AddRandom_init_default                   {0}
#define AddRandomResponse_init_default           {0}
#define ProcessFloats_init_default               {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define ProcessFloatsResponse_init_default       {0}
#define BatchSendMessage_init_default            {0, {SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default, SendMessage_init_default}}
#define BatchResponse_init_default               {0, {SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default, SendMessageResponse_init_default}}
#define RpcEnvelope_init_zero                    {0, 0, {SendMessage_init_zero}}
#define RpcResponse_init_zero                    {0, 0, {SendMessageResponse_init_zero}, 0}
#define SendMessage_init_zero                    {0, ""}
#define SendMessageResponse_init_zero            {0, ""}
#define AddRandom_init_zero                      {0}
#define AddRandomResponse_init_zero              {0}
#define ProcessFloats_init_zero                  {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define ProcessFloatsResponse_init_zero          {0}
#define BatchSendMessage_init_zero               {0, {SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero, SendMessage_init_zero}}
#define BatchResponse_init_zero                  {0, {SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero, SendMessageResponse_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define SendMessage_id_tag                       1
#define SendMessage_name_tag                     2
#define SendMessageResponse_id_tag               1
#define SendMessageResponse_info_tag             2
#define AddRandom_num_tag                        1
#define AddRandomResponse_sum_tag                1
#define ProcessFloats_num_tag                    1
#define ProcessFloatsResponse_sum_tag            1
#define BatchSendMessage_messages_tag            1
#define RpcEnvelope_request_id_tag               1
#define RpcEnvelope_msg_tag                      2
#define RpcEnvelope_rand_tag                     3
#define RpcEnvelope_flt_tag                      4
#define RpcEnvelope_batch_msg_tag                5
#define BatchResponse_responses_tag              1
#define RpcResponse_request_id_tag               1
#define RpcResponse_msg_tag                      2
#define RpcResponse_rand_tag                     3
#define RpcResponse_flt_tag                      4
#define RpcResponse_batch_msg_tag                5
#define RpcResponse_status_tag                   6

/* Struct field encoding specification for nanopb */
#define RpcEnvelope_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg,payload.msg),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,rand,payload.rand),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,flt,payload.flt),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,batch_msg,payload.batch_msg),   5)
#define RpcEnvelope_CALLBACK NULL
#define RpcEnvelope_DEFAULT NULL
#define RpcEnvelope_payload_msg_MSGTYPE SendMessage
#define RpcEnvelope_payload_rand_MSGTYPE AddRandom
#define RpcEnvelope_payload_flt_MSGTYPE ProcessFloats
#define RpcEnvelope_payload_batch_msg_MSGTYPE BatchSendMessage

#define RpcResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,msg,payload.msg),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,rand,payload.rand),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,flt,payload.flt),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,batch_msg,payload.batch_msg),   5) \
X(a, STATIC,   SINGULAR, BOOL,     status,            6)
#define RpcResponse_CALLBACK NULL
#define RpcResponse_DEFAULT NULL
#define RpcResponse_payload_msg_MSGTYPE SendMessageResponse
#define RpcResponse_payload_rand_MSGTYPE AddRandomResponse
#define RpcResponse_payload_flt_MSGTYPE ProcessFloatsResponse
#define RpcResponse_payload_batch_msg_MSGTYPE BatchResponse

#define SendMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    id,                1) \
X(a, STATIC,   SINGULAR, STRING,   name,              2)
#define SendMessage_CALLBACK NULL
#define SendMessage_DEFAULT NULL

#define SendMessageResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    id,                1) \
X(a, STATIC,   SINGULAR, STRING,   info,              2)
#define SendMessageResponse_CALLBACK NULL
#define SendMessageResponse_DEFAULT NULL

#define AddRandom_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    num,               1)
#define AddRandom_CALLBACK NULL
#define AddRandom_DEFAULT NULL

#define AddRandomResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    sum,               1)
#define AddRandomResponse_CALLBACK NULL
#define AddRandomResponse_DEFAULT NULL

#define ProcessFloats_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, FLOAT,    num,               1)
#define ProcessFloats_CALLBACK NULL
#define ProcessFloats_DEFAULT NULL

#define ProcessFloatsResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    sum,               1)
#define ProcessFloatsResponse_CALLBACK NULL
#define ProcessFloatsResponse_DEFAULT NULL

#define BatchSendMessage_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  messages,          1)
#define BatchSendMessage_CALLBACK NULL
#define BatchSendMessage_DEFAULT NULL
#define BatchSendMessage_messages_MSGTYPE SendMessage

#define BatchResponse_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  responses,         1)
#define BatchResponse_CALLBACK NULL
#define BatchResponse_DEFAULT NULL
#define BatchResponse_responses_MSGTYPE SendMessageResponse

extern const pb_msgdesc_t RpcEnvelope_msg;
extern const pb_msgdesc_t RpcResponse_msg;
extern const pb_msgdesc_t SendMessage_msg;
extern const pb_msgdesc_t SendMessageResponse_msg;
extern const pb_msgdesc_t AddRandom_msg;
extern const pb_msgdesc_t AddRandomResponse_msg;
extern const pb_msgdesc_t ProcessFloats_msg;
extern const pb_msgdesc_t ProcessFloatsResponse_msg;
extern const pb_msgdesc_t BatchSendMessage_msg;
extern const pb_msgdesc_t BatchResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define RpcEnvelope_fields &RpcEnvelope_msg
#define RpcResponse_fields &RpcResponse_msg
#define SendMessage_fields &SendMessage_msg
#define SendMessageResponse_fields &SendMessageResponse_msg
#define AddRandom_fields &AddRandom_msg
#define AddRandomResponse_fields &AddRandomResponse_msg
#define ProcessFloats_fields &ProcessFloats_msg
#define ProcessFloatsResponse_fields &ProcessFloatsResponse_msg
#define BatchSendMessage_fields &BatchSendMessage_msg
#define BatchResponse_fields &BatchResponse_msg

/* Maximum encoded size of messages (where known) */
#define AddRandomResponse_size                   11
#define AddRandom_size                           11
#define BatchResponse_size                       1248
#define BatchSendMessage_size                    736
#define ProcessFloatsResponse_size               5
#define ProcessFloats_size                       80
#define RPC_ENVELOPE_PB_H_MAX_SIZE               RpcResponse_size
#define RpcEnvelope_size                         745
#define RpcResponse_size                         1259
#define SendMessageResponse_size                 76
#define SendMessage_size                         44

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
